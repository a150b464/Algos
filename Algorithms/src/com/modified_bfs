	public static int modified_bfs(Vertex source, List<Vertex> vertexList) {
		int no_of_stops = 0;
		int counter = 0;
		int qsize = 0;
		// System.out.println(source.name);
		Queue<Vertex> qVertex = new LinkedList<Vertex>();// bed cbec decbed
															// ecbdecbce
		qVertex.add(source);
		while (!qVertex.isEmpty()) {
			for (int i = 0; i < qVertex.size(); i++) {
				qsize = qVertex.size();
				//System.out.println("Number in queue now " + qsize);
				source = qVertex.poll();
				//System.out.println("Removed Source " + source.name);
				--qsize;
				//System.out.println("No of parents left " + qsize);
				for (Edge e : source.edgeNodes) {
					//System.out.println("Added Child " + e.endNode.name);
					qVertex.add(e.endNode);
				}
				for (int k = 0; i < qsize; i++) {
					// System.out.println(qVertex.poll().name);
				}

			}
			// System.out.println("No of stops" + no_of_stops);
			no_of_stops++;
			if (no_of_stops == 6) {

				break;

			}

		}
		//System.out.println("reached");
		//System.out.println(qVertex.isEmpty());
		String temp;
		while (!qVertex.isEmpty()) {
			// System.out.println("Starting");
			temp = qVertex.poll().name;
			//System.out.println(temp);
			if (temp.equals("C")) {
				//System.out.println("Awesome");
				counter++;
			}
		}

		return counter;
	}
